name: update-friends-posts
on:
  push:
    branches: ["rs_dev"]
  schedule:
    - cron: "0 0,6,12,18,21 * * *"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # 在这里查看需要添加的secert
  # 通用配置
  SIMPLE_MODE: false # 极简模式是否开启，默认false
  DATABASE: sqlite # 默认使用sqlite
  PROXY: ${{ secrets.PROXY }} # 可选，http代理
  # mysql、sqlite、mongodb配置三选一即可
  # mysql配置
  MYSQL_URI: ${{ secrets.MYSQL_URI }} # MySQL URI
  # sqlite配置，用于将db文件上传到github仓库
  # GITHUB_NAME: ${{ secrets.GH_NAME }} # 你的github昵称
  # GITHUB_EMAIL: ${{ secrets.GH_EMAIL }} # 你的github邮箱
  # GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # github token
  # mongodb配置
  MONGODB_URI: ${{ secrets.MONGODB_URI }} # mongodb URI 支持'mongodb://'和'mongodb+srv://'
  TZ: Asia/Shanghai

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@beta
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        # with:
        # save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Check
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: rustfmt
        run: cargo fmt --all --check

  test-versions:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --workspace --all-features --all-targets -- --test-threads=1
  build:
    needs: [check, test-versions]
    name: build and run core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release
      - name: Read Config Values
        id: read_config
        run: |
          echo "Reading configuration from fc_settings.yaml"
          DEPLOY_TYPE=$(grep "DEPLOY_TYPE:" fc_settings.yaml | awk '{print $2}')
          DATABASE=$(grep "DATABASE:" fc_settings.yaml | awk '{print $2}')
          SIMPLE_MODE=$(grep "SIMPLE_MODE:" fc_settings.yaml | awk '{print $2}')
          echo "DEPLOY_TYPE=$DEPLOY_TYPE" >> $GITHUB_ENV
          echo "DATABASE=$DATABASE" >> $GITHUB_ENV
          echo "SIMPLE_MODE=$SIMPLE_MODE" >> $GITHUB_ENV
          echo "Configuration values: DEPLOY_TYPE=$DEPLOY_TYPE, DATABASE=$DATABASE, SIMPLE_MODE=$SIMPLE_MODE"
      - name: Run Core
        run: cargo run --bin core --release

      - name: Push sqlite data # sqlite push
        if: ${{ env.DATABASE == 'sqlite' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "data.db --force"
          message: "Update data.db"
          default_author: github_actions
      - name: simple mode push # 推送极简模式
        if: ${{ env.SIMPLE_MODE == 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "data.json --force"
          message: "Update data.json"
          default_author: github_actions

  keepalive-workflow:
    name: Keepalive Workflow
    if: github.event_name == 'schedule'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
